"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-animated-cursor";
exports.ids = ["vendor-chunks/react-animated-cursor"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-animated-cursor/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-animated-cursor/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AnimatedCursor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction useEventListener(type, listener, element) {\n    var listenerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(listener);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        listenerRef.current = listener;\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var el = element === undefined ? window : element;\n        var internalListener = function(ev) {\n            return listenerRef.current(ev);\n        };\n        el === null || el === void 0 ? void 0 : el.addEventListener(type, internalListener);\n        return function() {\n            el === null || el === void 0 ? void 0 : el.removeEventListener(type, internalListener);\n        };\n    }, [\n        type,\n        element\n    ]);\n}\nvar useDeviceInfo = function() {\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        info: \"\",\n        Android: function() {\n            return null;\n        },\n        BlackBerry: function() {\n            return null;\n        },\n        IEMobile: function() {\n            return null;\n        },\n        iOS: function() {\n            return null;\n        },\n        iPad: function() {\n            return null;\n        },\n        OperaMini: function() {\n            return null;\n        },\n        any: function() {\n            return false;\n        }\n    }), deviceInfo = _a[0], setDeviceInfo = _a[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (typeof navigator !== \"undefined\") {\n            var ua_1 = navigator.userAgent;\n            setDeviceInfo(function(prevDeviceInfo) {\n                return __assign(__assign({}, prevDeviceInfo), {\n                    info: ua_1,\n                    Android: function() {\n                        return ua_1.match(/Android/i);\n                    },\n                    BlackBerry: function() {\n                        return ua_1.match(/BlackBerry/i);\n                    },\n                    IEMobile: function() {\n                        return ua_1.match(/IEMobile/i);\n                    },\n                    iOS: function() {\n                        return ua_1.match(/iPhone|iPad|iPod/i);\n                    },\n                    iPad: function() {\n                        return !!(ua_1.match(/Mac/) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n                    },\n                    OperaMini: function() {\n                        return ua_1.match(/Opera Mini/i);\n                    },\n                    any: function() {\n                        var _a, _b, _c, _d, _e;\n                        return !!(((_a = prevDeviceInfo.Android()) === null || _a === void 0 ? void 0 : _a.length) || ((_b = prevDeviceInfo.BlackBerry()) === null || _b === void 0 ? void 0 : _b.length) || ((_c = prevDeviceInfo.iOS()) === null || _c === void 0 ? void 0 : _c.length) || prevDeviceInfo.iPad() || ((_d = prevDeviceInfo.OperaMini()) === null || _d === void 0 ? void 0 : _d.length) || ((_e = prevDeviceInfo.IEMobile()) === null || _e === void 0 ? void 0 : _e.length));\n                    }\n                });\n            });\n        }\n    }, []);\n    return deviceInfo;\n};\nfunction findInArray(arr, callback) {\n    var args = [];\n    for(var _i = 2; _i < arguments.length; _i++){\n        args[_i - 2] = arguments[_i];\n    }\n    if (typeof callback !== \"function\") {\n        throw new TypeError(\"callback must be a function\");\n    }\n    var list = Object(arr);\n    // Makes sure it always has a positive integer as length.\n    var length = list.length >>> 0;\n    var thisArg = args[2];\n    for(var i = 0; i < length; i++){\n        var element = list[i];\n        if (callback.call(thisArg, element, i, list)) {\n            return element;\n        }\n    }\n    return undefined;\n}\n/**\n * Cursor Core\n * Replaces the native cursor with a custom animated cursor, consisting\n * of an inner and outer dot that scale inversely based on hover or click.\n *\n * @author Stephen Scaff (github.com/stephenscaff)\n *\n * @param {object} obj\n * @param {array}  obj.clickables - array of clickable selectors\n * @param {string} obj.children - element that is shown instead of the inner dot\n * @param {string} obj.color - rgb color value\n * @param {number} obj.innerScale - inner cursor scale amount\n * @param {number} obj.innerSize - inner cursor size in px\n * @param {object} obj.innerStyle - style object for inner cursor\n * @param {number} obj.outerAlpha - level of alpha transparency for color\n * @param {number} obj.outerScale - outer cursor scale amount\n * @param {number} obj.outerSize - outer cursor size in px\n * @param {object} obj.outerStyle - style object for outer cursor\n * @param {bool}   obj.showSystemCursor - show/hide system cursor1\n * @param {number} obj.trailingSpeed - speed the outer cursor trails at\n */ function CursorCore(_a) {\n    var _b = _a.clickables, clickables = _b === void 0 ? [\n        \"a\",\n        'input[type=\"text\"]',\n        'input[type=\"email\"]',\n        'input[type=\"number\"]',\n        'input[type=\"submit\"]',\n        'input[type=\"image\"]',\n        \"label[for]\",\n        \"select\",\n        \"textarea\",\n        \"button\",\n        \".link\"\n    ] : _b, children = _a.children, _c = _a.color, color = _c === void 0 ? \"220, 90, 90\" : _c, _d = _a.innerScale, innerScale = _d === void 0 ? 0.6 : _d, _e = _a.innerSize, innerSize = _e === void 0 ? 8 : _e, innerStyle = _a.innerStyle, _f = _a.outerAlpha, outerAlpha = _f === void 0 ? 0.4 : _f, _g = _a.outerScale, outerScale = _g === void 0 ? 6 : _g, _h = _a.outerSize, outerSize = _h === void 0 ? 8 : _h, outerStyle = _a.outerStyle, _j = _a.showSystemCursor, showSystemCursor = _j === void 0 ? false : _j, _k = _a.trailingSpeed, trailingSpeed = _k === void 0 ? 8 : _k;\n    var defaultOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        return {\n            children: children,\n            color: color,\n            innerScale: innerScale,\n            innerSize: innerSize,\n            innerStyle: innerStyle,\n            outerAlpha: outerAlpha,\n            outerScale: outerScale,\n            outerSize: outerSize,\n            outerStyle: outerStyle\n        };\n    }, [\n        children,\n        color,\n        innerScale,\n        innerSize,\n        innerStyle,\n        outerAlpha,\n        outerScale,\n        outerSize,\n        outerStyle\n    ]);\n    var cursorOuterRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var cursorInnerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var requestRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var previousTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var _l = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    }), coords = _l[0], setCoords = _l[1];\n    var _m = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), isVisible = _m[0], setIsVisible = _m[1];\n    var _o = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultOptions), options = _o[0], setOptions = _o[1];\n    var _p = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), isActive = _p[0], setIsActive = _p[1];\n    var _q = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), isActiveClickable = _q[0], setIsActiveClickable = _q[1];\n    var endX = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    var endY = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    /**\n     * Primary Mouse move event\n     * @param {number} clientX - MouseEvent.clientX\n     * @param {number} clientY - MouseEvent.clientY\n     */ var onMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(event) {\n        var clientX = event.clientX, clientY = event.clientY;\n        setCoords({\n            x: clientX,\n            y: clientY\n        });\n        if (cursorInnerRef.current !== null) {\n            cursorInnerRef.current.style.top = \"\".concat(clientY, \"px\");\n            cursorInnerRef.current.style.left = \"\".concat(clientX, \"px\");\n        }\n        endX.current = clientX;\n        endY.current = clientY;\n    }, []);\n    // Outer Cursor Animation Delay\n    var animateOuterCursor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(time) {\n        if (previousTimeRef.current !== undefined) {\n            coords.x += (endX.current - coords.x) / trailingSpeed;\n            coords.y += (endY.current - coords.y) / trailingSpeed;\n            if (cursorOuterRef.current !== null) {\n                cursorOuterRef.current.style.top = \"\".concat(coords.y, \"px\");\n                cursorOuterRef.current.style.left = \"\".concat(coords.x, \"px\");\n            }\n        }\n        previousTimeRef.current = time;\n        requestRef.current = requestAnimationFrame(animateOuterCursor);\n    }, [\n        requestRef\n    ] // eslint-disable-line\n    );\n    // Outer cursor RAF setup / cleanup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        requestRef.current = requestAnimationFrame(animateOuterCursor);\n        return function() {\n            if (requestRef.current !== null) {\n                cancelAnimationFrame(requestRef.current);\n            }\n        };\n    }, [\n        animateOuterCursor\n    ]);\n    /**\n     * Calculates amount to scale cursor in px3\n     * @param {number} orignalSize - starting size\n     * @param {number} scaleAmount - Amount to scale\n     * @returns {String} Scale amount in px\n     */ var getScaleAmount = function(orignalSize, scaleAmount) {\n        return \"\".concat(parseInt(String(orignalSize * scaleAmount)), \"px\");\n    };\n    // Scales cursor by HxW\n    var scaleBySize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(cursorRef, orignalSize, scaleAmount) {\n        if (cursorRef) {\n            cursorRef.style.height = getScaleAmount(orignalSize, scaleAmount);\n            cursorRef.style.width = getScaleAmount(orignalSize, scaleAmount);\n        }\n    }, []);\n    // Mouse Events State updates\n    var onMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setIsActive(true);\n    }, []);\n    var onMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setIsActive(false);\n    }, []);\n    var onMouseEnterViewport = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setIsVisible(true);\n    }, []);\n    var onMouseLeaveViewport = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return setIsVisible(false);\n    }, []);\n    useEventListener(\"mousemove\", onMouseMove);\n    useEventListener(\"mousedown\", onMouseDown);\n    useEventListener(\"mouseup\", onMouseUp);\n    useEventListener(\"mouseover\", onMouseEnterViewport);\n    useEventListener(\"mouseout\", onMouseLeaveViewport);\n    // Cursors Hover/Active State\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (isActive) {\n            scaleBySize(cursorInnerRef.current, options.innerSize, options.innerScale);\n            scaleBySize(cursorOuterRef.current, options.outerSize, options.outerScale);\n        } else {\n            scaleBySize(cursorInnerRef.current, options.innerSize, 1);\n            scaleBySize(cursorOuterRef.current, options.outerSize, 1);\n        }\n    }, [\n        options.innerSize,\n        options.innerScale,\n        options.outerSize,\n        options.outerScale,\n        scaleBySize,\n        isActive\n    ]);\n    // Cursors Click States\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (isActiveClickable) {\n            scaleBySize(cursorInnerRef.current, options.innerSize, options.innerScale * 1.2);\n            scaleBySize(cursorOuterRef.current, options.outerSize, options.outerScale * 1.4);\n        }\n    }, [\n        options.innerSize,\n        options.innerScale,\n        options.outerSize,\n        options.outerScale,\n        scaleBySize,\n        isActiveClickable\n    ]);\n    // Cursor Visibility Statea\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (cursorInnerRef.current == null || cursorOuterRef.current == null) return;\n        if (isVisible) {\n            cursorInnerRef.current.style.opacity = \"1\";\n            cursorOuterRef.current.style.opacity = \"1\";\n        } else {\n            cursorInnerRef.current.style.opacity = \"0\";\n            cursorOuterRef.current.style.opacity = \"0\";\n        }\n    }, [\n        isVisible\n    ]);\n    // Click event state updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var clickableEls = document.querySelectorAll(clickables.map(function(clickable) {\n            return typeof clickable === \"object\" && (clickable === null || clickable === void 0 ? void 0 : clickable.target) ? clickable.target : clickable !== null && clickable !== void 0 ? clickable : \"\";\n        }).join(\",\"));\n        clickableEls.forEach(function(el) {\n            if (!showSystemCursor) el.style.cursor = \"none\";\n            var clickableOptions = typeof clickables === \"object\" ? findInArray(clickables, function(clickable) {\n                return typeof clickable === \"object\" && el.matches(clickable.target);\n            }) : {};\n            var options = __assign(__assign({}, defaultOptions), clickableOptions);\n            el.addEventListener(\"mouseover\", function() {\n                setIsActive(true);\n                setOptions(options);\n            });\n            el.addEventListener(\"click\", function() {\n                setIsActive(true);\n                setIsActiveClickable(false);\n            });\n            el.addEventListener(\"mousedown\", function() {\n                setIsActiveClickable(true);\n            });\n            el.addEventListener(\"mouseup\", function() {\n                setIsActive(true);\n            });\n            el.addEventListener(\"mouseout\", function() {\n                setIsActive(false);\n                setIsActiveClickable(false);\n                setOptions(defaultOptions);\n            });\n        });\n        return function() {\n            clickableEls.forEach(function(el) {\n                var clickableOptions = typeof clickables === \"object\" ? findInArray(clickables, function(clickable) {\n                    return typeof clickable === \"object\" && el.matches(clickable.target);\n                }) : {};\n                var options = __assign(__assign({}, defaultOptions), clickableOptions);\n                el.removeEventListener(\"mouseover\", function() {\n                    setIsActive(true);\n                    setOptions(options);\n                });\n                el.removeEventListener(\"click\", function() {\n                    setIsActive(true);\n                    setIsActiveClickable(false);\n                });\n                el.removeEventListener(\"mousedown\", function() {\n                    setIsActiveClickable(true);\n                });\n                el.removeEventListener(\"mouseup\", function() {\n                    setIsActive(true);\n                });\n                el.removeEventListener(\"mouseout\", function() {\n                    setIsActive(false);\n                    setIsActiveClickable(false);\n                    setOptions(defaultOptions);\n                });\n            });\n        };\n    }, [\n        isActive,\n        clickables,\n        showSystemCursor,\n        defaultOptions\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (false) {}\n    }, [\n        showSystemCursor\n    ]);\n    var coreStyles = {\n        zIndex: 999,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        pointerEvents: \"none\",\n        transform: \"translate(-50%, -50%)\",\n        transition: \"opacity 0.15s ease-in-out, height 0.2s ease-in-out, width 0.2s ease-in-out\"\n    };\n    // Cursor Styles\n    var styles = {\n        cursorInner: __assign(__assign({\n            width: !options.children ? options.innerSize : \"auto\",\n            height: !options.children ? options.innerSize : \"auto\",\n            backgroundColor: !options.children ? \"rgba(\".concat(options.color, \", 1)\") : \"transparent\"\n        }, coreStyles), options.innerStyle && options.innerStyle),\n        cursorOuter: __assign(__assign({\n            width: options.outerSize,\n            height: options.outerSize,\n            backgroundColor: \"rgba(\".concat(options.color, \", \").concat(options.outerAlpha, \")\")\n        }, coreStyles), options.outerStyle && options.outerStyle)\n    };\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                ref: cursorOuterRef,\n                style: styles.cursorOuter\n            }),\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", __assign({\n                ref: cursorInnerRef,\n                style: styles.cursorInner\n            }, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", __assign({\n                    style: {\n                        opacity: !options.children ? 0 : 1,\n                        transition: \"opacity 0.3s ease-in-out\"\n                    }\n                }, {\n                    children: options.children\n                }))\n            }))\n        ]\n    });\n}\n/**\n * AnimatedCursor\n * Calls and passes props to CursorCore if not a touch/mobile device.\n */ function AnimatedCursor(_a) {\n    var children = _a.children, clickables = _a.clickables, color = _a.color, innerScale = _a.innerScale, innerSize = _a.innerSize, innerStyle = _a.innerStyle, outerAlpha = _a.outerAlpha, outerScale = _a.outerScale, outerSize = _a.outerSize, outerStyle = _a.outerStyle, showSystemCursor = _a.showSystemCursor, trailingSpeed = _a.trailingSpeed;\n    var deviceInfo = useDeviceInfo();\n    if (typeof navigator !== \"undefined\" && deviceInfo.any()) {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {});\n    }\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CursorCore, __assign({\n        clickables: clickables,\n        color: color,\n        innerScale: innerScale,\n        innerSize: innerSize,\n        innerStyle: innerStyle,\n        outerAlpha: outerAlpha,\n        outerScale: outerScale,\n        outerSize: outerSize,\n        outerStyle: outerStyle,\n        showSystemCursor: showSystemCursor,\n        trailingSpeed: trailingSpeed\n    }, {\n        children: children\n    }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-animated-cursor/dist/index.es.js\n");

/***/ })

};
;